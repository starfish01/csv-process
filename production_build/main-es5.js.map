{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/add-data/add-data.component.ts","webpack:///src/app/home/add-data/add-data.component.html","webpack:///src/app/home/add-data/json-popup/json-popup.component.ts","webpack:///src/app/home/add-data/json-popup/json-popup.component.html","webpack:///src/app/home/add-data/list-popup/list-popup.component.ts","webpack:///src/app/home/add-data/list-popup/list-popup.component.html","webpack:///src/app/home/clean-csv/clean-csv.component.ts","webpack:///src/app/home/clean-csv/clean-csv.component.html","webpack:///src/app/home/csv-service.service.ts","webpack:///src/app/home/csv-tags/csv-tags.component.ts","webpack:///src/app/home/csv-tags/csv-tags.component.html","webpack:///src/app/home/display-columns/display-columns.component.ts","webpack:///src/app/home/display-columns/display-columns.component.html","webpack:///src/app/home/export/export.component.ts","webpack:///src/app/home/export/export.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/includes/snack-bar.service.ts","webpack:///src/app/home/includes/snackbar/snackbar.component.ts","webpack:///src/app/home/includes/snackbar/snackbar.component.html","webpack:///src/app/home/json-edit/json-edit.component.ts","webpack:///src/app/home/json-edit/json-edit.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddDataComponent","papa","csvDataService","dialog","quickFormat","quickFormatInfo","removeInvalidChars","fileInputEvent","target","files","file","options","header","delimiter","quotes","complete","result","filename","name","replace","addCsv","fileName","data","transform","res","parse","dialogConfig","disableClose","autoFocus","height","width","open","csvInputChange","addByJson","addByList","JsonPopupComponent","dialogRef","csvService","close","setUpEditor","fileTitle","onNoClick","editorOptions","mode","title","value","onClickSave","ListPopupComponent","arrayData","split","newArrayData","item","trim","length","outputValue","substr","slice","push","CleanCsvComponent","selectedCsv","selectedCsvSub","selectedCsvChanged","subscribe","updateCsv","o","duplicatedColumnTitle","Date","now","el","key","unsubscribe","addRowOfNumbers","CsvServiceService","cookieService","snackbarService","csvDataChanged","csvData","quickCheckRemoveSchoolsIncludes","fillerWords","openSnackBar","next","newData","row","Description","Code","includes","cleanSchoolLookUp","element","canAdd","text","toLowerCase","filteredShortNames","sentenceArray","hasFiller","findCheck","acceptableLength","deleteCookie","selectCSV","columnTitle","message","action","newCsvData","a","stringData","getCookie","JSON","stringify","set","cookie","get","deleteAll","providedIn","CsvTagsComponent","csvDataSub","csv","removeCsv","clearAll","DisplayColumnsComponent","setColHeadings","colTitle","onSaveSelected","updatedArray","newObj","index","treatment","newObjArray","arr","originalColumnTitle","originalKey","event","drop","ExportComponent","clipboard","customSnackbarMessage","copy","unparse","blob","Blob","type","dwldLink","document","createElement","url","URL","createObjectURL","isSafariBrowser","navigator","userAgent","indexOf","setAttribute","style","visibility","body","appendChild","click","removeChild","onCopyJson","onDownloadCsv","HomeComponent","viewSelected","boot","option","SnackBarService","snackBar","duration","panelClass","SnackbarComponent","JsonEditComponent","editorData","onSave","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport * as _ from 'lodash';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n\n  constructor() {}\n\n}\n","<nav class=\"navbar is-link margin-bottom-2\" role=\"navigation\" aria-label=\"main navigation\">\n  <div class=\"navbar-brand\">\n    <a class=\"navbar-item\" href=\"/\">\n      CSV Processer\n    </a>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { NgJsonEditorModule } from 'ang-jsoneditor';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\n\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { HomeComponent } from './home/home.component';\nimport { AddDataComponent } from './home/add-data/add-data.component';\nimport { CsvTagsComponent } from './home/csv-tags/csv-tags.component';\nimport { DisplayColumnsComponent } from './home/display-columns/display-columns.component';\nimport { ExportComponent } from './home/export/export.component';\nimport { CleanCsvComponent } from './home/clean-csv/clean-csv.component';\nimport { JsonEditComponent } from './home/json-edit/json-edit.component';\nimport { SnackbarComponent } from './home/includes/snackbar/snackbar.component';\nimport { JsonPopupComponent } from './home/add-data/json-popup/json-popup.component';\nimport { ListPopupComponent } from './home/add-data/list-popup/list-popup.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AddDataComponent,\n    CsvTagsComponent,\n    DisplayColumnsComponent,\n    ExportComponent,\n    CleanCsvComponent,\n    JsonEditComponent,\n    SnackbarComponent,\n    JsonPopupComponent,\n    ListPopupComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    ClipboardModule,\n    NgJsonEditorModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatDialogModule,\n    DragDropModule\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Papa } from 'ngx-papaparse';\nimport * as _ from 'lodash';\nimport { CsvServiceService } from '../csv-service.service';\n\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { JsonPopupComponent } from './json-popup/json-popup.component';\nimport { ListPopupComponent } from './list-popup/list-popup.component';\n\n@Component({\n  selector: 'app-add-data',\n  templateUrl: './add-data.component.html',\n  styleUrls: ['./add-data.component.scss'],\n})\nexport class AddDataComponent implements OnInit {\n  constructor(\n    private papa: Papa,\n    private csvDataService: CsvServiceService,\n    private dialog: MatDialog\n  ) {}\n\n  quickFormat = false;\n  quickFormatInfo =\n    'This will remove all columns bar code and description and will remove any rows without values and any duplicates. Schools will be cleaned';\n  removeInvalidChars = true;\n\n  ngOnInit(): void {}\n\n  csvInputChange(fileInputEvent: any) {\n    _.forEach(fileInputEvent.target.files, (file) => {\n      const options = {\n        header: true,\n        delimiter: ',',\n        quotes: false,\n        // skipEmptyLines: 'greedy',\n        complete: (result) => {\n          const filename = file.name.replace('.csv', '');\n          this.csvDataService.addCsv(\n            {\n              fileName: filename,\n              data: result.data,\n            },\n            this.quickFormat\n          );\n        },\n        transform: (res) => {\n          if (!this.removeInvalidChars) {\n            return res;\n          }\n          return res.replace(/[^\\w\\s\\\\\\.\\-\\:\\;\\&\\/]/gi, '');\n        },\n      };\n\n      this.papa.parse(file, options);\n    });\n  }\n\n  addByJson() {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '800px';\n    dialogConfig.width = '100vw';\n\n    this.dialog.open(JsonPopupComponent, dialogConfig);\n  }\n\n  addByList() {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '800px';\n    dialogConfig.width = '100vw';\n\n    this.dialog.open(ListPopupComponent, dialogConfig);\n  }\n}\n","<div class=\"container margin-bottom-2\">\n  <div>\n    <input #csvInput multiple hidden=\"true\" type=\"file\" onclick=\"this.value=null\" (change)=\"csvInputChange($event)\"\n      accept=\".csv\" />\n    <div class=\"buttons\">\n      <button class=\"button is-success\" (click)=\"csvInput.click()\">Add CSV File(s)</button>\n      <button class=\"button is-success\" (click)=\"addByJson()\">Add JSON</button>\n      <button class=\"button is-success\" (click)=\"addByList()\">Add List</button>\n      <label style=\"padding-right: 10px;\" class=\"checkbox\" matTooltipPosition=\"after\" [matTooltip]=\"quickFormatInfo\">\n        <input [(ngModel)]=\"quickFormat\" type=\"checkbox\">\n        Quick Format\n      </label>\n\n      <label class=\"checkbox\" matTooltipPosition=\"after\" matTooltip=\"Remove invalid characters\">\n        <input [(ngModel)]=\"removeInvalidChars\" type=\"checkbox\">\n        Remove invalid characters\n      </label>\n\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { JsonEditorComponent, JsonEditorOptions } from 'ang-jsoneditor';\nimport { CsvServiceService } from '../../csv-service.service';\n\n@Component({\n  selector: 'app-json-popup',\n  templateUrl: './json-popup.component.html',\n  styleUrls: ['./json-popup.component.scss'],\n})\nexport class JsonPopupComponent implements OnInit {\n  public editorOptions: JsonEditorOptions;\n  public data: any;\n\n  public fileTitle: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<JsonPopupComponent>,\n    private csvService: CsvServiceService\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n    this.setUpEditor();\n  }\n\n  onClickSave() {\n    if (!this.fileTitle) {\n      return;\n    }\n    this.csvService.addCsv({\n      fileName: this.fileTitle,\n      data: this.data,\n    });\n    this.onNoClick();\n  }\n\n  setUpEditor() {\n    this.editorOptions = new JsonEditorOptions();\n    // this.editorOptions.modes = ['code', 'text', 'tree', 'view'];\n    this.editorOptions.mode = 'code';\n    this.data = [\n      { title: 'M', value: 'M' },\n      { title: 'F', value: 'F' },\n    ];\n  }\n}\n","<h1 mat-dialog-title>Add JSON</h1>\n<div class=\"container margin-bottom-2\">\n\n  <div class=\"field\">\n    <label class=\"label\">File Title</label>\n    <div class=\"control\">\n      <input class=\"input\" [(ngModel)]=\"fileTitle\" type=\"text\" placeholder=\"e.g genderTable\">\n    </div>\n  </div>\n\n</div>\n<div class=\"container margin-bottom-2\">\n  <json-editor style=\"min-height: 800px;\" [options]=\"editorOptions\" [(ngModel)]=\"data\"></json-editor>\n</div>\n<div mat-dialog-actions>\n  <button color=\"primary\" mat-button (click)=\"onClickSave()\">Save</button>\n  <button color=\"warn\" style=\"margin-left: auto;\" mat-button (click)=\"onNoClick()\">Close</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport * as _ from 'lodash';\n\nimport { CsvServiceService } from '../../csv-service.service';\n\n@Component({\n  selector: 'app-list-popup',\n  templateUrl: './list-popup.component.html',\n  styleUrls: ['./list-popup.component.scss'],\n})\nexport class ListPopupComponent implements OnInit {\n  public data: any;\n\n  public fileTitle: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<ListPopupComponent>,\n    private csvService: CsvServiceService\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onClickSave() {\n    if (!this.fileTitle) {\n      return;\n    }\n    const arrayData = this.data.split(\"\\n\");\n    const newArrayData = [];\n\n    _.forEach(arrayData, (item) => {\n      if (item.trim().length <= 0) return;\n\n      // If each item has a comma at the end we probably want to remove it;\n      const outputValue = item.substr(-1) === ',' ? item.slice(0, -1) : item;\n\n      newArrayData.push({\n        title: outputValue,\n        value: outputValue\n      });\n\n    })\n\n    this.csvService.addCsv({\n      fileName: this.fileTitle,\n      data: newArrayData,\n    });\n    this.onNoClick();\n  }\n\n\n}\n","<h1 mat-dialog-title>Add JSON</h1>\n<div class=\"container margin-bottom-2\">\n\n  <div class=\"field\">\n    <label class=\"label\">File Title</label>\n    <div class=\"control\">\n      <input class=\"input\" [(ngModel)]=\"fileTitle\" type=\"text\" placeholder=\"e.g genderTable\">\n    </div>\n  </div>\n\n</div>\n<div class=\"container margin-bottom-2\">\n  <div class=\"control\">\n    <label class=\"label\">List</label>\n    <textarea class=\"textarea\" [(ngModel)]=\"data\" rows=\"10\"></textarea>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button color=\"primary\" mat-button (click)=\"onClickSave()\">Save</button>\n  <button color=\"warn\" style=\"margin-left: auto;\" mat-button (click)=\"onNoClick()\">Close</button>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CsvServiceService } from '../csv-service.service';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-clean-csv',\n  templateUrl: './clean-csv.component.html',\n  styleUrls: ['./clean-csv.component.scss'],\n})\nexport class CleanCsvComponent implements OnInit, OnDestroy {\n  selectedCsv: any;\n  private selectedCsvSub: Subscription;\n\n  columnTitles: string[];\n\n  constructor(private csvService: CsvServiceService) {}\n\n  ngOnInit(): void {\n    this.selectedCsv = this.csvService.selectedCsv;\n    this.selectedCsvSub = this.csvService.selectedCsvChanged.subscribe(\n      (data) => {\n        this.selectedCsv = data;\n      }\n    );\n  }\n\n  removeDuplicates(title: string) {\n    this.selectedCsv.data = _.uniqBy(this.selectedCsv.data, title);\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  removeEmptyVaules(title: string) {\n    this.selectedCsv.data = _.filter(this.selectedCsv.data, (o) => o[title]);\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  duplicateColumn(title: string) {\n    const duplicatedColumnTitle = title + '_' + Date.now();\n    _.forEach(this.selectedCsv.data, (el) => {\n      el[duplicatedColumnTitle] = el[title];\n    });\n\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  addRowOfNumbers() {\n    const duplicatedColumnTitle = 'id_' + Date.now();\n    _.forEach(this.selectedCsv.data, (el, key) => {\n      el[duplicatedColumnTitle] = key;\n    });\n\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  ngOnDestroy() {\n    this.selectedCsvSub.unsubscribe();\n  }\n}\n","<div class=\"container margin-bottom-2\">\n  <p>Remove duplicates from column</p>\n  <div class=\"buttons\">\n    <button (click)=\"removeDuplicates(title)\" class=\"button is-info\"\n      *ngFor=\"let title of selectedCsv.columnTitle\">{{title}}</button>\n  </div>\n\n  <p>Remove empty values from column</p>\n  <div class=\"buttons\">\n    <button (click)=\"removeEmptyVaules(title)\" class=\"button is-info\"\n      *ngFor=\"let title of selectedCsv.columnTitle\">{{title}}</button>\n  </div>\n\n  <p>Duplicate Column</p>\n  <div class=\"buttons\">\n    <button (click)=\"duplicateColumn(title)\" class=\"button is-info\"\n      *ngFor=\"let title of selectedCsv.columnTitle\">{{title}}</button>\n  </div>\n\n  <p>Add Row of Numbers</p>\n  <div class=\"buttons\">\n    <button (click)=\"addRowOfNumbers()\" class=\"button is-info\">Add</button>\n  </div>\n\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as _ from 'lodash';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SnackBarService } from './includes/snack-bar.service';\nimport { element } from 'protractor';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CsvServiceService {\n  csvDataChanged = new Subject<object[]>();\n  selectedCsvChanged = new Subject<object>();\n\n  csvData = [];\n  selectedCsv = null;\n\n  quickCheckRemoveSchoolsIncludes = [\n    'Army',\n    'Apprenticeship',\n    'ABC Learning Centres',\n    'Deceased',\n    'Didnt leave',\n    \"Didn/'t\",\n    'hospital',\n    'Drama School',\n    'Early Learners',\n    'Family Day Care',\n    'Home Schooling',\n    'Day Care',\n    'In ',\n    'To ',\n    'Interstate',\n    'Kindergarten',\n    'Child Care',\n    'Kinder',\n    'Language School',\n    'Language Centre',\n    'Not Applicable',\n    'Not known',\n    'Not Leaving',\n    'Overseas',\n    'Pre-apprenticeship',\n    'Seeking Apprenticeship',\n    'Special School',\n    'Kids',\n    'TAFE',\n    'PreSchool',\n    'Pre School',\n    'Pre-School',\n    'Pre-Sch',\n    'Pre Sch',\n    'Pre Primary',\n    'Pre-Primary',\n    'University',\n    'Childrens Centre',\n    'YMCA',\n    'United Arba Emirates',\n  ];\n\n  fillerWords = ['st', 'saint', 'school', 'college'];\n\n  constructor(\n    private cookieService: CookieService,\n    private snackbarService: SnackBarService\n  ) {}\n\n  addCsv(file, quickFormat: boolean = false) {\n    if (quickFormat) {\n      file = this.quickFormat(file);\n    }\n\n    this.snackbarService.openSnackBar('CSV(s) Added', 'close');\n    this.csvData.push(file);\n    // this.setCookie();\n    this.csvDataChanged.next(this.csvData);\n  }\n\n  quickFormat(file) {\n    const csvData = file;\n    let newData = [];\n\n    _.forEach(csvData.data, (row) => {\n      let title = row.Description;\n      let value = row.Code;\n      if (!title || !value) {\n\n        // might be a previously opened document\n        if (row.title && row.value) {\n          title = row.title;\n          value = row.value;\n        } else {\n          return;\n        }\n      }\n      newData.push({\n        value,\n        title,\n      });\n    });\n\n    newData = _.uniqBy(newData, 'title');\n    newData = _.uniqBy(newData, 'value');\n\n    if (csvData.fileName.includes('LookupSchool')) {\n      newData = this.cleanSchoolLookUp(newData);\n    }\n\n    csvData.data = newData;\n\n    return csvData;\n  }\n\n  cleanSchoolLookUp(data: Object[]) {\n    const newData = [];\n    // remove included values\n    _.forEach(data, (element) => {\n      let canAdd = true;\n      _.forEach(this.quickCheckRemoveSchoolsIncludes, (key) => {\n        let text = element['title'].toLowerCase();\n        if (text.includes(key.toLowerCase())) {\n          canAdd = false;\n          return;\n        }\n      });\n      if (canAdd) {\n        newData.push(element);\n      }\n    });\n    // remove anything under 3 words\n    const filteredShortNames = [];\n    _.forEach(newData, (element) => {\n      const sentenceArray: [String] = element['title'].split(' ');\n      if (sentenceArray.length >= 3) {\n        let hasFiller = 0;\n\n        _.forEach(this.fillerWords, (el) => {\n          let findCheck = _.find(sentenceArray, (item) => {\n            return item.toLowerCase() === el;\n          });\n\n          if (findCheck) {\n            hasFiller++;\n          }\n        });\n\n        const acceptableLength = sentenceArray.length - hasFiller;\n        if (hasFiller === 0 || acceptableLength >= 3) {\n          filteredShortNames.push(element);\n        }\n      }\n    });\n    return filteredShortNames;\n  }\n\n  removeCsv(fileName) {\n    this.csvData = _.remove(this.csvData, (file) => {\n      return file.fileName !== fileName;\n    });\n    if (fileName === this.selectedCsv.fileName) {\n      this.selectedCsv = null;\n      this.selectedCsvChanged.next(this.selectedCsv);\n    }\n    this.snackbarService.openSnackBar('CSV Removed', 'close');\n    // this.setCookie();\n    this.csvDataChanged.next(this.csvData);\n  }\n\n  clearAll() {\n    this.csvData = [];\n    this.deleteCookie();\n    this.selectCSV = null;\n    this.snackbarService.openSnackBar('All CSV(s) Removed', 'close');\n    this.selectedCsvChanged.next(this.selectCSV);\n    this.csvDataChanged.next(this.csvData);\n  }\n\n  selectCSV(selectedCsv) {\n    const columnTitle = [];\n    _.forOwn(selectedCsv.data[0], (value, key) => {\n      columnTitle.push(key);\n    });\n    selectedCsv.columnTitle = columnTitle;\n    this.selectedCsv = selectedCsv;\n    // this.setCookie();\n    this.selectedCsvChanged.next(this.selectedCsv);\n  }\n\n  customSnackbarMessage(message: string, action: string) {\n    this.snackbarService.openSnackBar(message, action);\n  }\n\n  updateCsv(selectedCsv: any) {\n    // lodash\n    const newCsvData = _.map(this.csvData, (a) => {\n      return a.fileName === selectedCsv.fileName ? selectedCsv : a;\n    });\n\n    this.snackbarService.openSnackBar('CSV Updated', 'close');\n    this.selectCSV(selectedCsv);\n    this.csvData = newCsvData;\n    // this.setCookie();\n    this.csvDataChanged.next(this.csvData);\n  }\n\n  boot() {\n    const stringData = this.getCookie();\n    if (stringData.length !== 0) {\n      this.csvData = JSON.parse(stringData);\n      this.csvDataChanged.next(this.csvData);\n    } else {\n      this.csvData = [];\n      this.csvDataChanged.next(this.csvData);\n    }\n  }\n\n  setCookie() {\n    const data = JSON.stringify(this.csvData);\n    this.cookieService.set('synergetic-data', data);\n  }\n\n  getCookie() {\n    const cookie = this.cookieService.get('synergetic-data');\n    return cookie;\n  }\n\n  deleteCookie() {\n    this.cookieService.deleteAll();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CsvServiceService } from '../csv-service.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-csv-tags',\n  templateUrl: './csv-tags.component.html',\n  styleUrls: ['./csv-tags.component.scss'],\n})\nexport class CsvTagsComponent implements OnInit {\n  csvData: any[];\n  private csvDataSub: Subscription;\n\n  selectedCsv: any;\n  private selectedCsvSub: Subscription;\n\n  constructor(private csvDataService: CsvServiceService) {}\n\n  ngOnInit(): void {\n    this.csvData = this.csvDataService.csvData;\n    this.csvDataSub = this.csvDataService.csvDataChanged.subscribe((data) => {\n      this.csvData = data;\n    });\n\n    this.selectedCsv = this.csvDataService.selectedCsv;\n    this.selectedCsvSub = this.csvDataService.selectedCsvChanged.subscribe(\n      (data) => {\n        this.selectedCsv = data;\n      }\n    );\n  }\n\n  onSelectCsv(csv: Object) {\n    this.csvDataService.selectCSV(csv);\n  }\n\n  ngOnDestroy() {\n    this.csvDataSub.unsubscribe();\n    this.selectedCsvSub.unsubscribe();\n  }\n\n  onRemove(fileName: string) {\n    this.csvDataService.removeCsv(fileName);\n  }\n\n  onClearAll() {\n    this.csvDataService.clearAll();\n  }\n}\n","<div class=\"container margin-bottom-2\">\n  <div class=\"columns is-multiline is-mobile\">\n\n    <div class=\"column is-narrow\" *ngFor=\"let csv of csvData\">\n      <a [className]=\"(selectedCsv && selectedCsv.fileName === csv.fileName) ? 'is-primary tag is-medium' : 'is-info tag is-medium'\"\n        (click)=\"onSelectCsv(csv)\">\n        {{csv.fileName}}\n        <button (click)=\"onRemove(csv.fileName)\" class=\"delete\"></button>\n      </a>\n    </div>\n  </div>\n\n  <div class=\"columns is-multiline is-mobile\" *ngIf=\"csvData\">\n    <div class=\"column is-offset-10\" *ngIf=\"csvData\">\n      <div class=\"buttons\">\n        <button class=\"button is-danger\" (click)=\"onClearAll()\">Clear All</button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"columns is-centered\" *ngIf=\"selectedCsv\">\n    <div class=\"column is-narrow\">\n      <h3 class=\"title is-3\">{{selectedCsv.fileName}}</h3>\n    </div>\n  </div>\n\n\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CsvServiceService } from '../csv-service.service';\nimport * as _ from 'lodash';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-display-columns',\n  templateUrl: './display-columns.component.html',\n  styleUrls: ['./display-columns.component.scss'],\n})\nexport class DisplayColumnsComponent implements OnInit, OnDestroy {\n  selectedCsv: any;\n  private selectedCsvSub: Subscription;\n\n  columnTitle: string[];\n  originalColumnTitle: string[];\n\n  constructor(private csvService: CsvServiceService) {}\n\n  ngOnInit(): void {\n    this.selectedCsv = this.csvService.selectedCsv;\n    if (this.selectedCsv) {\n      this.setColHeadings();\n    }\n    this.selectedCsvSub = this.csvService.selectedCsvChanged.subscribe(\n      (data) => {\n        this.selectedCsv = data;\n        this.setColHeadings();\n      }\n    );\n  }\n\n  removeColumn(colTitle) {\n    this.onSaveSelected();\n    const updatedArray = [];\n    _.forEach(this.selectedCsv.data, (row) => {\n      const newObj = {};\n      _.forOwn(row, (value, key) => {\n        if (key !== colTitle) {\n          newObj[key] = value;\n        }\n      });\n      updatedArray.push(newObj);\n    });\n    this.selectedCsv.data = updatedArray;\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  trackByFn(index, treatment) {\n    return index;\n  }\n\n  onSaveSelected() {\n    const newObjArray = [];\n    _.forEach(this.selectedCsv.data, (el, index, arr) => {\n      // each element in object\n      const newObj = {};\n      _.forOwn(el, (value, key) => {\n        // loop through the original titles\n        _.forEach(this.originalColumnTitle, (originalKey, index) => {\n          if (originalKey === key) {\n            newObj[this.columnTitle[index]] = value;\n          }\n        });\n      });\n      newObjArray.push(newObj);\n    });\n    this.selectedCsv.data = newObjArray;\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  setColHeadings() {\n    this.columnTitle = [];\n    this.columnTitle = _.clone(this.selectedCsv.columnTitle);\n    this.originalColumnTitle = [];\n    this.originalColumnTitle = _.clone(this.selectedCsv.columnTitle);\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    // console.log(this.columnTitle[event.previousIndex]);\n    // moveItemInArray(this.columnTitle, event.previousIndex, event.currentIndex);\n    // console.log(event);\n\n    // need to update values\n  }\n\n  ngOnDestroy() {\n    this.selectedCsvSub.unsubscribe();\n  }\n}\n","<div class=\"container margin-bottom-2\">\n  <table class=\"table is-striped\">\n    <tr cdkDropList (cdkDropListDropped)=\"drop($event)\" >\n      <th cdkDrag *ngFor=\"let item of columnTitle;let i = index; trackBy:trackByFn\">\n        <div class=\"field has-addons\">\n          <div class=\"control\">\n            <input class=\"input\" [(ngModel)]=\"columnTitle[i]\" type=\"text\" placeholder=\"Column Title\">\n          </div>\n          <div class=\"control\">\n            <a class=\"button is-danger\" (click)=\"removeColumn(item)\">\n              <mat-icon aria-hidden=\"false\" slot=\"start\">close</mat-icon>\n            </a>\n          </div>\n        </div>\n      </th>\n      <th>\n        <div class=\"buttons\" >\n          <button class=\"button is-primary\" (click)=\"onSaveSelected()\">\n            <mat-icon aria-hidden=\"false\" slot=\"start\">save</mat-icon>\n            <span slot=\"end\"> Save</span>\n          </button>\n        </div>\n      </th>\n    </tr>\n\n    <ng-container *ngFor=\"let itemRow of selectedCsv.data | slice:0:10; let i = index\">\n      <tr>\n        <td *ngFor=\"let item of selectedCsv.columnTitle\">{{itemRow[item]}}</td>\n      </tr>\n    </ng-container>\n  </table>\n  <div style=\"width:100%; text-align: center;\" *ngIf=\"selectedCsv.data.length > 10\">\n    Displaying 10 of {{selectedCsv.data.length}}\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CsvServiceService } from '../csv-service.service';\nimport { Papa } from 'ngx-papaparse';\n\nimport { Clipboard } from \"@angular/cdk/clipboard\"\n\n\n@Component({\n  selector: 'app-export',\n  templateUrl: './export.component.html',\n  styleUrls: ['./export.component.scss'],\n})\nexport class ExportComponent implements OnInit {\n  selectedCsv: any;\n  private selectedCsvSub: Subscription;\n\n  constructor(private csvService: CsvServiceService, private papa: Papa, private clipboard: Clipboard) {}\n\n  ngOnInit(): void {\n    this.selectedCsv = this.csvService.selectedCsv;\n    this.selectedCsvSub = this.csvService.selectedCsvChanged.subscribe(\n      (data) => {\n        this.selectedCsv = data;\n      }\n    );\n  }\n\n  onCopyJson() {\n    this.csvService.customSnackbarMessage('Copied JSON to Clipboard', 'close');\n    this.clipboard.copy(JSON.stringify(this.selectedCsv.data));\n  }\n\n  onDownloadCsv() {\n    const file = this.papa.unparse(this.selectedCsv.data, { header: true });\n    let blob = new Blob(['\\ufeff' + file], {\n      type: 'text/csv;charset=utf-8;',\n    });\n    let dwldLink = document.createElement(\"a\");\n    let url = URL.createObjectURL(blob);\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n    if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\n        dwldLink.setAttribute(\"target\", \"_blank\");\n    }\n    dwldLink.setAttribute(\"href\", url);\n    dwldLink.setAttribute(\"download\", this.selectedCsv.fileName + \".csv\");\n    dwldLink.style.visibility = \"hidden\";\n    document.body.appendChild(dwldLink);\n    dwldLink.click();\n    document.body.removeChild(dwldLink);\n  }\n}\n","<div class=\"container margin-bottom-2\">\n  <div class=\"buttons\">\n    <button class=\"button is-info\" (click)=\"onCopyJson()\">\n      <mat-icon aria-hidden=\"false\" slot=\"start\">save</mat-icon>\n      <span slot=\"end\">Copy JSON</span>\n    </button>\n    <button class=\"button is-info\" (click)=\"onDownloadCsv()\">\n      <mat-icon aria-hidden=\"false\" slot=\"start\">save</mat-icon>\n      <span slot=\"end\">Download CSV</span>\n    </button>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CsvServiceService } from './csv-service.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  csvData: any[];\n  private csvDataSub: Subscription;\n\n  selectedCsv: any;\n  private selectedCsvSub: Subscription;\n\n  viewSelected: string = 'export';\n\n\n  constructor(private csvService: CsvServiceService) { }\n\n  ngOnInit(): void {\n    this.csvService.boot();\n    this.csvData = this.csvService.csvData;\n    this.csvDataSub = this.csvService.csvDataChanged.subscribe((data) => {\n      this.csvData = data;\n    });\n\n    this.selectedCsv = this.csvService.selectedCsv;\n    this.selectedCsvSub = this.csvService.selectedCsvChanged.subscribe(\n      (data) => {\n        this.selectedCsv = data;\n        this.viewSelected = 'export';\n      }\n    );\n\n\n  }\n\n  onViewChange(option) {\n    this.viewSelected = option;\n  }\n\n  ngOnDestroy() {\n    this.csvDataSub.unsubscribe();\n    this.selectedCsvSub.unsubscribe();\n  }\n\n\n\n}\n","<app-add-data></app-add-data>\n<app-csv-tags *ngIf=\"csvData.length\"></app-csv-tags>\n\n<ng-container *ngIf=\"selectedCsv\">\n\n  <div class=\"tabs is-centered is-boxed\">\n    <ul>\n      <li [class]=\"viewSelected === 'export' ? 'is-active' : ''\">\n        <a (click)=\"onViewChange('export')\">\n          <mat-icon aria-hidden=\"false\" slot=\"start\">file_copy</mat-icon>\n          <span>Export CSV/JSON</span>\n        </a>\n      </li>\n      <li [class]=\"viewSelected === 'update-columns' ? 'is-active' : ''\">\n        <a (click)=\"onViewChange('update-columns')\">\n          <mat-icon aria-hidden=\"false\" slot=\"start\">view_column</mat-icon>\n          <span>Update Columns</span>\n        </a>\n      </li>\n      <li [class]=\"viewSelected === 'clean-data' ? 'is-active' : ''\">\n        <a (click)=\"onViewChange('clean-data')\">\n          <mat-icon aria-hidden=\"false\" slot=\"start\">sort</mat-icon>\n          <span>Edit Data</span>\n        </a>\n      </li>\n      <li [class]=\"viewSelected === 'json-edit' ? 'is-active' : ''\">\n        <a (click)=\"onViewChange('json-edit')\">\n          <mat-icon aria-hidden=\"false\" slot=\"start\">format_align_left</mat-icon>\n          <span>JSON Edit</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n\n  <app-display-columns *ngIf=\"viewSelected === 'update-columns'\"></app-display-columns>\n  <app-clean-csv *ngIf=\"viewSelected === 'clean-data'\"></app-clean-csv>\n  <app-export *ngIf=\"viewSelected === 'export'\"></app-export>\n  <app-json-edit *ngIf=\"viewSelected === 'json-edit'\"></app-json-edit>\n\n</ng-container>","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackBarService {\n  constructor(private snackBar: MatSnackBar) {}\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n      panelClass: 'snackbar'\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>snackbar works!</p>\n\n<button> \n    SnackBarButton \n</button> ","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CsvServiceService } from '../csv-service.service';\nimport { JsonEditorComponent, JsonEditorOptions } from 'ang-jsoneditor';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-json-edit',\n  templateUrl: './json-edit.component.html',\n  styleUrls: ['./json-edit.component.scss'],\n})\nexport class JsonEditComponent implements OnInit, OnDestroy {\n  public editorOptions: JsonEditorOptions;\n  public data: any;\n\n  @ViewChild(JsonEditorComponent, { static: false })\n  editor: JsonEditorComponent;\n\n  selectedCsv: any;\n  private selectedCsvSub: Subscription;\n\n  editorData: object;\n\n  constructor(private csvService: CsvServiceService) {}\n\n  ngOnInit(): void {\n    this.selectedCsv = this.csvService.selectedCsv;\n    this.setUpEditor();\n    this.selectedCsvSub = this.csvService.selectedCsvChanged.subscribe(\n      (data) => {\n        this.selectedCsv = data;\n        this.setUpEditor();\n      }\n    );\n  }\n\n  setUpEditor() {\n    this.editorOptions = new JsonEditorOptions();\n    // this.editorOptions.modes = ['code', 'text', 'tree', 'view'];\n    this.editorOptions.mode = 'code';\n    this.editorData = this.selectedCsv.data;\n  }\n\n  onSave() {\n    this.selectedCsv.data = this.editorData;\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  ngOnDestroy() {\n    this.selectedCsvSub.unsubscribe();\n  }\n}\n","<div class=\"container margin-bottom-2\">\n  <div class=\"buttons\" >\n    <button class=\"button is-primary\" (click)=\"onSave()\">\n      <mat-icon aria-hidden=\"false\" slot=\"start\">save</mat-icon>\n      <span slot=\"end\"> Save JSON</span>\n    </button>\n  </div>\n\n  <json-editor style=\"min-height: 800px;\" [options]=\"editorOptions\" [(ngModel)]=\"editorData\" ></json-editor>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}