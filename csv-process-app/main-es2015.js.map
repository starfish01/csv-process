{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/add-data/add-data.component.ts","./src/app/home/add-data/add-data.component.html","./src/app/home/add-data/json-popup/json-popup.component.ts","./src/app/home/add-data/json-popup/json-popup.component.html","./src/app/home/add-data/list-popup/list-popup.component.ts","./src/app/home/add-data/list-popup/list-popup.component.html","./src/app/home/clean-csv/clean-csv.component.ts","./src/app/home/clean-csv/clean-csv.component.html","./src/app/home/csv-service.service.ts","./src/app/home/csv-tags/csv-tags.component.ts","./src/app/home/csv-tags/csv-tags.component.html","./src/app/home/display-columns/display-columns.component.ts","./src/app/home/display-columns/display-columns.component.html","./src/app/home/export/export.component.ts","./src/app/home/export/export.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/includes/snack-bar.service.ts","./src/app/home/includes/snackbar/snackbar.component.ts","./src/app/home/includes/snackbar/snackbar.component.html","./src/app/home/json-edit/json-edit.component.ts","./src/app/home/json-edit/json-edit.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport * as _ from 'lodash';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n\n  constructor() {}\n\n}\n","<nav class=\"navbar is-link margin-bottom-2\" role=\"navigation\" aria-label=\"main navigation\">\n  <div class=\"navbar-brand\">\n    <a class=\"navbar-item\" href=\"/\">\n      CSV Processer\n    </a>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { NgJsonEditorModule } from 'ang-jsoneditor';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\n\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { HomeComponent } from './home/home.component';\nimport { AddDataComponent } from './home/add-data/add-data.component';\nimport { CsvTagsComponent } from './home/csv-tags/csv-tags.component';\nimport { DisplayColumnsComponent } from './home/display-columns/display-columns.component';\nimport { ExportComponent } from './home/export/export.component';\nimport { CleanCsvComponent } from './home/clean-csv/clean-csv.component';\nimport { JsonEditComponent } from './home/json-edit/json-edit.component';\nimport { SnackbarComponent } from './home/includes/snackbar/snackbar.component';\nimport { JsonPopupComponent } from './home/add-data/json-popup/json-popup.component';\nimport { ListPopupComponent } from './home/add-data/list-popup/list-popup.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AddDataComponent,\n    CsvTagsComponent,\n    DisplayColumnsComponent,\n    ExportComponent,\n    CleanCsvComponent,\n    JsonEditComponent,\n    SnackbarComponent,\n    JsonPopupComponent,\n    ListPopupComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    ClipboardModule,\n    NgJsonEditorModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatDialogModule,\n    DragDropModule\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Papa } from 'ngx-papaparse';\nimport * as _ from 'lodash';\nimport { CsvServiceService } from '../csv-service.service';\n\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { JsonPopupComponent } from './json-popup/json-popup.component';\nimport { ListPopupComponent } from './list-popup/list-popup.component';\n\n@Component({\n  selector: 'app-add-data',\n  templateUrl: './add-data.component.html',\n  styleUrls: ['./add-data.component.scss'],\n})\nexport class AddDataComponent implements OnInit {\n  constructor(\n    private papa: Papa,\n    private csvDataService: CsvServiceService,\n    private dialog: MatDialog\n  ) {}\n\n  quickFormat = false;\n  quickFormatInfo =\n    'This will remove all columns bar code and description and will remove any rows without values and any duplicates. Schools will be cleaned';\n  removeInvalidChars = true;\n\n  ngOnInit(): void {}\n\n  csvInputChange(fileInputEvent: any) {\n    _.forEach(fileInputEvent.target.files, (file) => {\n      const options = {\n        header: true,\n        delimiter: ',',\n        quotes: false,\n        // skipEmptyLines: 'greedy',\n        complete: (result) => {\n          const filename = file.name.replace('.csv', '');\n          this.csvDataService.addCsv(\n            {\n              fileName: filename,\n              data: result.data,\n            },\n            this.quickFormat\n          );\n        },\n        transform: (res) => {\n          if (!this.removeInvalidChars) {\n            return res;\n          }\n          return res.replace(/[^\\w\\s\\\\\\.\\-\\:\\;\\&\\/]/gi, '');\n        },\n      };\n\n      this.papa.parse(file, options);\n    });\n  }\n\n  addByJson() {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '800px';\n    dialogConfig.width = '100vw';\n\n    this.dialog.open(JsonPopupComponent, dialogConfig);\n  }\n\n  addByList() {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '800px';\n    dialogConfig.width = '100vw';\n\n    this.dialog.open(ListPopupComponent, dialogConfig);\n  }\n}\n","<div class=\"container margin-bottom-2\">\n  <div>\n    <input #csvInput multiple hidden=\"true\" type=\"file\" onclick=\"this.value=null\" (change)=\"csvInputChange($event)\"\n      accept=\".csv\" />\n    <div class=\"buttons\">\n      <button class=\"button is-success\" (click)=\"csvInput.click()\">Add CSV File(s)</button>\n      <button class=\"button is-success\" (click)=\"addByJson()\">Add JSON</button>\n      <button class=\"button is-success\" (click)=\"addByList()\">Add List</button>\n      <label style=\"padding-right: 10px;\" class=\"checkbox\" matTooltipPosition=\"after\" [matTooltip]=\"quickFormatInfo\">\n        <input [(ngModel)]=\"quickFormat\" type=\"checkbox\">\n        Quick Format\n      </label>\n\n      <label class=\"checkbox\" matTooltipPosition=\"after\" matTooltip=\"Remove invalid characters\">\n        <input [(ngModel)]=\"removeInvalidChars\" type=\"checkbox\">\n        Remove invalid characters\n      </label>\n\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { JsonEditorComponent, JsonEditorOptions } from 'ang-jsoneditor';\nimport { CsvServiceService } from '../../csv-service.service';\n\n@Component({\n  selector: 'app-json-popup',\n  templateUrl: './json-popup.component.html',\n  styleUrls: ['./json-popup.component.scss'],\n})\nexport class JsonPopupComponent implements OnInit {\n  public editorOptions: JsonEditorOptions;\n  public data: any;\n\n  public fileTitle: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<JsonPopupComponent>,\n    private csvService: CsvServiceService\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n    this.setUpEditor();\n  }\n\n  onClickSave() {\n    if (!this.fileTitle) {\n      return;\n    }\n    this.csvService.addCsv({\n      fileName: this.fileTitle,\n      data: this.data,\n    });\n    this.onNoClick();\n  }\n\n  setUpEditor() {\n    this.editorOptions = new JsonEditorOptions();\n    // this.editorOptions.modes = ['code', 'text', 'tree', 'view'];\n    this.editorOptions.mode = 'code';\n    this.data = [\n      { title: 'M', value: 'M' },\n      { title: 'F', value: 'F' },\n    ];\n  }\n}\n","<h1 mat-dialog-title>Add JSON</h1>\n<div class=\"container margin-bottom-2\">\n\n  <div class=\"field\">\n    <label class=\"label\">File Title</label>\n    <div class=\"control\">\n      <input class=\"input\" [(ngModel)]=\"fileTitle\" type=\"text\" placeholder=\"e.g genderTable\">\n    </div>\n  </div>\n\n</div>\n<div class=\"container margin-bottom-2\">\n  <json-editor style=\"min-height: 800px;\" [options]=\"editorOptions\" [(ngModel)]=\"data\"></json-editor>\n</div>\n<div mat-dialog-actions>\n  <button color=\"primary\" mat-button (click)=\"onClickSave()\">Save</button>\n  <button color=\"warn\" style=\"margin-left: auto;\" mat-button (click)=\"onNoClick()\">Close</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport * as _ from 'lodash';\n\nimport { CsvServiceService } from '../../csv-service.service';\n\n@Component({\n  selector: 'app-list-popup',\n  templateUrl: './list-popup.component.html',\n  styleUrls: ['./list-popup.component.scss'],\n})\nexport class ListPopupComponent implements OnInit {\n  public data: any;\n\n  public fileTitle: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<ListPopupComponent>,\n    private csvService: CsvServiceService\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onClickSave() {\n    if (!this.fileTitle) {\n      return;\n    }\n    const arrayData = this.data.split(\"\\n\");\n    const newArrayData = [];\n\n    _.forEach(arrayData, (item) => {\n      if (item.trim().length <= 0) return;\n\n      // If each item has a comma at the end we probably want to remove it;\n      const outputValue = item.substr(-1) === ',' ? item.slice(0, -1) : item;\n\n      newArrayData.push({\n        title: outputValue,\n        value: outputValue\n      });\n\n    })\n\n    this.csvService.addCsv({\n      fileName: this.fileTitle,\n      data: newArrayData,\n    });\n    this.onNoClick();\n  }\n\n\n}\n","<h1 mat-dialog-title>Add JSON</h1>\n<div class=\"container margin-bottom-2\">\n\n  <div class=\"field\">\n    <label class=\"label\">File Title</label>\n    <div class=\"control\">\n      <input class=\"input\" [(ngModel)]=\"fileTitle\" type=\"text\" placeholder=\"e.g genderTable\">\n    </div>\n  </div>\n\n</div>\n<div class=\"container margin-bottom-2\">\n  <div class=\"control\">\n    <label class=\"label\">List</label>\n    <textarea class=\"textarea\" [(ngModel)]=\"data\" rows=\"10\"></textarea>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button color=\"primary\" mat-button (click)=\"onClickSave()\">Save</button>\n  <button color=\"warn\" style=\"margin-left: auto;\" mat-button (click)=\"onNoClick()\">Close</button>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CsvServiceService } from '../csv-service.service';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-clean-csv',\n  templateUrl: './clean-csv.component.html',\n  styleUrls: ['./clean-csv.component.scss'],\n})\nexport class CleanCsvComponent implements OnInit, OnDestroy {\n  selectedCsv: any;\n  private selectedCsvSub: Subscription;\n\n  columnTitles: string[];\n\n  constructor(private csvService: CsvServiceService) {}\n\n  ngOnInit(): void {\n    this.selectedCsv = this.csvService.selectedCsv;\n    this.selectedCsvSub = this.csvService.selectedCsvChanged.subscribe(\n      (data) => {\n        this.selectedCsv = data;\n      }\n    );\n  }\n\n  removeDuplicates(title: string) {\n    this.selectedCsv.data = _.uniqBy(this.selectedCsv.data, title);\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  removeEmptyVaules(title: string) {\n    this.selectedCsv.data = _.filter(this.selectedCsv.data, (o) => o[title]);\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  duplicateColumn(title: string) {\n    const duplicatedColumnTitle = title + '_' + Date.now();\n    _.forEach(this.selectedCsv.data, (el) => {\n      el[duplicatedColumnTitle] = el[title];\n    });\n\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  addRowOfNumbers() {\n    const duplicatedColumnTitle = 'id_' + Date.now();\n    _.forEach(this.selectedCsv.data, (el, key) => {\n      el[duplicatedColumnTitle] = key;\n    });\n\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  ngOnDestroy() {\n    this.selectedCsvSub.unsubscribe();\n  }\n}\n","<div class=\"container margin-bottom-2\">\n  <p>Remove duplicates from column</p>\n  <div class=\"buttons\">\n    <button (click)=\"removeDuplicates(title)\" class=\"button is-info\"\n      *ngFor=\"let title of selectedCsv.columnTitle\">{{title}}</button>\n  </div>\n\n  <p>Remove empty values from column</p>\n  <div class=\"buttons\">\n    <button (click)=\"removeEmptyVaules(title)\" class=\"button is-info\"\n      *ngFor=\"let title of selectedCsv.columnTitle\">{{title}}</button>\n  </div>\n\n  <p>Duplicate Column</p>\n  <div class=\"buttons\">\n    <button (click)=\"duplicateColumn(title)\" class=\"button is-info\"\n      *ngFor=\"let title of selectedCsv.columnTitle\">{{title}}</button>\n  </div>\n\n  <p>Add Row of Numbers</p>\n  <div class=\"buttons\">\n    <button (click)=\"addRowOfNumbers()\" class=\"button is-info\">Add</button>\n  </div>\n\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as _ from 'lodash';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SnackBarService } from './includes/snack-bar.service';\nimport { element } from 'protractor';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CsvServiceService {\n  csvDataChanged = new Subject<object[]>();\n  selectedCsvChanged = new Subject<object>();\n\n  csvData = [];\n  selectedCsv = null;\n\n  quickCheckRemoveSchoolsIncludes = [\n    'Army',\n    'Apprenticeship',\n    'ABC Learning Centres',\n    'Deceased',\n    'Didnt leave',\n    \"Didn/'t\",\n    'hospital',\n    'Drama School',\n    'Early Learners',\n    'Family Day Care',\n    'Home Schooling',\n    'Day Care',\n    'In ',\n    'To ',\n    'Interstate',\n    'Kindergarten',\n    'Child Care',\n    'Kinder',\n    'Language School',\n    'Language Centre',\n    'Not Applicable',\n    'Not known',\n    'Not Leaving',\n    'Overseas',\n    'Pre-apprenticeship',\n    'Seeking Apprenticeship',\n    'Special School',\n    'Kids',\n    'TAFE',\n    'PreSchool',\n    'Pre School',\n    'Pre-School',\n    'Pre-Sch',\n    'Pre Sch',\n    'Pre Primary',\n    'Pre-Primary',\n    'University',\n    'Childrens Centre',\n    'YMCA',\n    'United Arba Emirates',\n  ];\n\n  fillerWords = ['st', 'saint', 'school', 'college'];\n\n  constructor(\n    private cookieService: CookieService,\n    private snackbarService: SnackBarService\n  ) {}\n\n  addCsv(file, quickFormat: boolean = false) {\n    if (quickFormat) {\n      file = this.quickFormat(file);\n    }\n\n    this.snackbarService.openSnackBar('CSV(s) Added', 'close');\n    this.csvData.push(file);\n    // this.setCookie();\n    this.csvDataChanged.next(this.csvData);\n  }\n\n  quickFormat(file) {\n    const csvData = file;\n    let newData = [];\n\n    _.forEach(csvData.data, (row) => {\n      let title = row.Description;\n      let value = row.Code;\n      if (!title || !value) {\n\n        // might be a previously opened document\n        if (row.title && row.value) {\n          title = row.title;\n          value = row.value;\n        } else {\n          return;\n        }\n      }\n      newData.push({\n        value,\n        title,\n      });\n    });\n\n    newData = _.uniqBy(newData, 'title');\n    newData = _.uniqBy(newData, 'value');\n\n    if (csvData.fileName.includes('LookupSchool')) {\n      newData = this.cleanSchoolLookUp(newData);\n    }\n\n    csvData.data = newData;\n\n    return csvData;\n  }\n\n  cleanSchoolLookUp(data: Object[]) {\n    const newData = [];\n    // remove included values\n    _.forEach(data, (element) => {\n      let canAdd = true;\n      _.forEach(this.quickCheckRemoveSchoolsIncludes, (key) => {\n        let text = element['title'].toLowerCase();\n        if (text.includes(key.toLowerCase())) {\n          canAdd = false;\n          return;\n        }\n      });\n      if (canAdd) {\n        newData.push(element);\n      }\n    });\n    // remove anything under 3 words\n    const filteredShortNames = [];\n    _.forEach(newData, (element) => {\n      const sentenceArray: [String] = element['title'].split(' ');\n      if (sentenceArray.length >= 3) {\n        let hasFiller = 0;\n\n        _.forEach(this.fillerWords, (el) => {\n          let findCheck = _.find(sentenceArray, (item) => {\n            return item.toLowerCase() === el;\n          });\n\n          if (findCheck) {\n            hasFiller++;\n          }\n        });\n\n        const acceptableLength = sentenceArray.length - hasFiller;\n        if (hasFiller === 0 || acceptableLength >= 3) {\n          filteredShortNames.push(element);\n        }\n      }\n    });\n    return filteredShortNames;\n  }\n\n  removeCsv(fileName) {\n    this.csvData = _.remove(this.csvData, (file) => {\n      return file.fileName !== fileName;\n    });\n    if (fileName === this.selectedCsv.fileName) {\n      this.selectedCsv = null;\n      this.selectedCsvChanged.next(this.selectedCsv);\n    }\n    this.snackbarService.openSnackBar('CSV Removed', 'close');\n    // this.setCookie();\n    this.csvDataChanged.next(this.csvData);\n  }\n\n  clearAll() {\n    this.csvData = [];\n    this.deleteCookie();\n    this.selectCSV = null;\n    this.snackbarService.openSnackBar('All CSV(s) Removed', 'close');\n    this.selectedCsvChanged.next(this.selectCSV);\n    this.csvDataChanged.next(this.csvData);\n  }\n\n  selectCSV(selectedCsv) {\n    const columnTitle = [];\n    _.forOwn(selectedCsv.data[0], (value, key) => {\n      columnTitle.push(key);\n    });\n    selectedCsv.columnTitle = columnTitle;\n    this.selectedCsv = selectedCsv;\n    // this.setCookie();\n    this.selectedCsvChanged.next(this.selectedCsv);\n  }\n\n  customSnackbarMessage(message: string, action: string) {\n    this.snackbarService.openSnackBar(message, action);\n  }\n\n  updateCsv(selectedCsv: any) {\n    // lodash\n    const newCsvData = _.map(this.csvData, (a) => {\n      return a.fileName === selectedCsv.fileName ? selectedCsv : a;\n    });\n\n    this.snackbarService.openSnackBar('CSV Updated', 'close');\n    this.selectCSV(selectedCsv);\n    this.csvData = newCsvData;\n    // this.setCookie();\n    this.csvDataChanged.next(this.csvData);\n  }\n\n  boot() {\n    const stringData = this.getCookie();\n    if (stringData.length !== 0) {\n      this.csvData = JSON.parse(stringData);\n      this.csvDataChanged.next(this.csvData);\n    } else {\n      this.csvData = [];\n      this.csvDataChanged.next(this.csvData);\n    }\n  }\n\n  setCookie() {\n    const data = JSON.stringify(this.csvData);\n    this.cookieService.set('synergetic-data', data);\n  }\n\n  getCookie() {\n    const cookie = this.cookieService.get('synergetic-data');\n    return cookie;\n  }\n\n  deleteCookie() {\n    this.cookieService.deleteAll();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CsvServiceService } from '../csv-service.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-csv-tags',\n  templateUrl: './csv-tags.component.html',\n  styleUrls: ['./csv-tags.component.scss'],\n})\nexport class CsvTagsComponent implements OnInit {\n  csvData: any[];\n  private csvDataSub: Subscription;\n\n  selectedCsv: any;\n  private selectedCsvSub: Subscription;\n\n  constructor(private csvDataService: CsvServiceService) {}\n\n  ngOnInit(): void {\n    this.csvData = this.csvDataService.csvData;\n    this.csvDataSub = this.csvDataService.csvDataChanged.subscribe((data) => {\n      this.csvData = data;\n    });\n\n    this.selectedCsv = this.csvDataService.selectedCsv;\n    this.selectedCsvSub = this.csvDataService.selectedCsvChanged.subscribe(\n      (data) => {\n        this.selectedCsv = data;\n      }\n    );\n  }\n\n  onSelectCsv(csv: Object) {\n    this.csvDataService.selectCSV(csv);\n  }\n\n  ngOnDestroy() {\n    this.csvDataSub.unsubscribe();\n    this.selectedCsvSub.unsubscribe();\n  }\n\n  onRemove(fileName: string) {\n    this.csvDataService.removeCsv(fileName);\n  }\n\n  onClearAll() {\n    this.csvDataService.clearAll();\n  }\n}\n","<div class=\"container margin-bottom-2\">\n  <div class=\"columns is-multiline is-mobile\">\n\n    <div class=\"column is-narrow\" *ngFor=\"let csv of csvData\">\n      <a [className]=\"(selectedCsv && selectedCsv.fileName === csv.fileName) ? 'is-primary tag is-medium' : 'is-info tag is-medium'\"\n        (click)=\"onSelectCsv(csv)\">\n        {{csv.fileName}}\n        <button (click)=\"onRemove(csv.fileName)\" class=\"delete\"></button>\n      </a>\n    </div>\n  </div>\n\n  <div class=\"columns is-multiline is-mobile\" *ngIf=\"csvData\">\n    <div class=\"column is-offset-10\" *ngIf=\"csvData\">\n      <div class=\"buttons\">\n        <button class=\"button is-danger\" (click)=\"onClearAll()\">Clear All</button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"columns is-centered\" *ngIf=\"selectedCsv\">\n    <div class=\"column is-narrow\">\n      <h3 class=\"title is-3\">{{selectedCsv.fileName}}</h3>\n    </div>\n  </div>\n\n\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CsvServiceService } from '../csv-service.service';\nimport * as _ from 'lodash';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-display-columns',\n  templateUrl: './display-columns.component.html',\n  styleUrls: ['./display-columns.component.scss'],\n})\nexport class DisplayColumnsComponent implements OnInit, OnDestroy {\n  selectedCsv: any;\n  private selectedCsvSub: Subscription;\n\n  columnTitle: string[];\n  originalColumnTitle: string[];\n\n  constructor(private csvService: CsvServiceService) {}\n\n  ngOnInit(): void {\n    this.selectedCsv = this.csvService.selectedCsv;\n    if (this.selectedCsv) {\n      this.setColHeadings();\n    }\n    this.selectedCsvSub = this.csvService.selectedCsvChanged.subscribe(\n      (data) => {\n        this.selectedCsv = data;\n        this.setColHeadings();\n      }\n    );\n  }\n\n  removeColumn(colTitle) {\n    this.onSaveSelected();\n    const updatedArray = [];\n    _.forEach(this.selectedCsv.data, (row) => {\n      const newObj = {};\n      _.forOwn(row, (value, key) => {\n        if (key !== colTitle) {\n          newObj[key] = value;\n        }\n      });\n      updatedArray.push(newObj);\n    });\n    this.selectedCsv.data = updatedArray;\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  trackByFn(index, treatment) {\n    return index;\n  }\n\n  onSaveSelected() {\n    const newObjArray = [];\n    _.forEach(this.selectedCsv.data, (el, index, arr) => {\n      // each element in object\n      const newObj = {};\n      _.forOwn(el, (value, key) => {\n        // loop through the original titles\n        _.forEach(this.originalColumnTitle, (originalKey, index) => {\n          if (originalKey === key) {\n            newObj[this.columnTitle[index]] = value;\n          }\n        });\n      });\n      newObjArray.push(newObj);\n    });\n    this.selectedCsv.data = newObjArray;\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  setColHeadings() {\n    this.columnTitle = [];\n    this.columnTitle = _.clone(this.selectedCsv.columnTitle);\n    this.originalColumnTitle = [];\n    this.originalColumnTitle = _.clone(this.selectedCsv.columnTitle);\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    // console.log(this.columnTitle[event.previousIndex]);\n    // moveItemInArray(this.columnTitle, event.previousIndex, event.currentIndex);\n    // console.log(event);\n\n    // need to update values\n  }\n\n  ngOnDestroy() {\n    this.selectedCsvSub.unsubscribe();\n  }\n}\n","<div class=\"container margin-bottom-2\">\n  <table class=\"table is-striped\">\n    <tr cdkDropList (cdkDropListDropped)=\"drop($event)\" >\n      <th cdkDrag *ngFor=\"let item of columnTitle;let i = index; trackBy:trackByFn\">\n        <div class=\"field has-addons\">\n          <div class=\"control\">\n            <input class=\"input\" [(ngModel)]=\"columnTitle[i]\" type=\"text\" placeholder=\"Column Title\">\n          </div>\n          <div class=\"control\">\n            <a class=\"button is-danger\" (click)=\"removeColumn(item)\">\n              <mat-icon aria-hidden=\"false\" slot=\"start\">close</mat-icon>\n            </a>\n          </div>\n        </div>\n      </th>\n      <th>\n        <div class=\"buttons\" >\n          <button class=\"button is-primary\" (click)=\"onSaveSelected()\">\n            <mat-icon aria-hidden=\"false\" slot=\"start\">save</mat-icon>\n            <span slot=\"end\"> Save</span>\n          </button>\n        </div>\n      </th>\n    </tr>\n\n    <ng-container *ngFor=\"let itemRow of selectedCsv.data | slice:0:10; let i = index\">\n      <tr>\n        <td *ngFor=\"let item of selectedCsv.columnTitle\">{{itemRow[item]}}</td>\n      </tr>\n    </ng-container>\n  </table>\n  <div style=\"width:100%; text-align: center;\" *ngIf=\"selectedCsv.data.length > 10\">\n    Displaying 10 of {{selectedCsv.data.length}}\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CsvServiceService } from '../csv-service.service';\nimport { Papa } from 'ngx-papaparse';\n\nimport { Clipboard } from \"@angular/cdk/clipboard\"\n\n\n@Component({\n  selector: 'app-export',\n  templateUrl: './export.component.html',\n  styleUrls: ['./export.component.scss'],\n})\nexport class ExportComponent implements OnInit {\n  selectedCsv: any;\n  private selectedCsvSub: Subscription;\n\n  constructor(private csvService: CsvServiceService, private papa: Papa, private clipboard: Clipboard) {}\n\n  ngOnInit(): void {\n    this.selectedCsv = this.csvService.selectedCsv;\n    this.selectedCsvSub = this.csvService.selectedCsvChanged.subscribe(\n      (data) => {\n        this.selectedCsv = data;\n      }\n    );\n  }\n\n  onCopyJson() {\n    this.csvService.customSnackbarMessage('Copied JSON to Clipboard', 'close');\n    this.clipboard.copy(JSON.stringify(this.selectedCsv.data));\n  }\n\n  onDownloadCsv() {\n    const file = this.papa.unparse(this.selectedCsv.data, { header: true });\n    let blob = new Blob(['\\ufeff' + file], {\n      type: 'text/csv;charset=utf-8;',\n    });\n    let dwldLink = document.createElement(\"a\");\n    let url = URL.createObjectURL(blob);\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n    if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\n        dwldLink.setAttribute(\"target\", \"_blank\");\n    }\n    dwldLink.setAttribute(\"href\", url);\n    dwldLink.setAttribute(\"download\", this.selectedCsv.fileName + \".csv\");\n    dwldLink.style.visibility = \"hidden\";\n    document.body.appendChild(dwldLink);\n    dwldLink.click();\n    document.body.removeChild(dwldLink);\n  }\n}\n","<div class=\"container margin-bottom-2\">\n  <div class=\"buttons\">\n    <button class=\"button is-info\" (click)=\"onCopyJson()\">\n      <mat-icon aria-hidden=\"false\" slot=\"start\">save</mat-icon>\n      <span slot=\"end\">Copy JSON</span>\n    </button>\n    <button class=\"button is-info\" (click)=\"onDownloadCsv()\">\n      <mat-icon aria-hidden=\"false\" slot=\"start\">save</mat-icon>\n      <span slot=\"end\">Download CSV</span>\n    </button>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CsvServiceService } from './csv-service.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  csvData: any[];\n  private csvDataSub: Subscription;\n\n  selectedCsv: any;\n  private selectedCsvSub: Subscription;\n\n  viewSelected: string = 'export';\n\n\n  constructor(private csvService: CsvServiceService) { }\n\n  ngOnInit(): void {\n    this.csvService.boot();\n    this.csvData = this.csvService.csvData;\n    this.csvDataSub = this.csvService.csvDataChanged.subscribe((data) => {\n      this.csvData = data;\n    });\n\n    this.selectedCsv = this.csvService.selectedCsv;\n    this.selectedCsvSub = this.csvService.selectedCsvChanged.subscribe(\n      (data) => {\n        this.selectedCsv = data;\n        this.viewSelected = 'export';\n      }\n    );\n\n\n  }\n\n  onViewChange(option) {\n    this.viewSelected = option;\n  }\n\n  ngOnDestroy() {\n    this.csvDataSub.unsubscribe();\n    this.selectedCsvSub.unsubscribe();\n  }\n\n\n\n}\n","<app-add-data></app-add-data>\n<app-csv-tags *ngIf=\"csvData.length\"></app-csv-tags>\n\n<ng-container *ngIf=\"selectedCsv\">\n\n  <div class=\"tabs is-centered is-boxed\">\n    <ul>\n      <li [class]=\"viewSelected === 'export' ? 'is-active' : ''\">\n        <a (click)=\"onViewChange('export')\">\n          <mat-icon aria-hidden=\"false\" slot=\"start\">file_copy</mat-icon>\n          <span>Export CSV/JSON</span>\n        </a>\n      </li>\n      <li [class]=\"viewSelected === 'update-columns' ? 'is-active' : ''\">\n        <a (click)=\"onViewChange('update-columns')\">\n          <mat-icon aria-hidden=\"false\" slot=\"start\">view_column</mat-icon>\n          <span>Update Columns</span>\n        </a>\n      </li>\n      <li [class]=\"viewSelected === 'clean-data' ? 'is-active' : ''\">\n        <a (click)=\"onViewChange('clean-data')\">\n          <mat-icon aria-hidden=\"false\" slot=\"start\">sort</mat-icon>\n          <span>Edit Data</span>\n        </a>\n      </li>\n      <li [class]=\"viewSelected === 'json-edit' ? 'is-active' : ''\">\n        <a (click)=\"onViewChange('json-edit')\">\n          <mat-icon aria-hidden=\"false\" slot=\"start\">format_align_left</mat-icon>\n          <span>JSON Edit</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n\n  <app-display-columns *ngIf=\"viewSelected === 'update-columns'\"></app-display-columns>\n  <app-clean-csv *ngIf=\"viewSelected === 'clean-data'\"></app-clean-csv>\n  <app-export *ngIf=\"viewSelected === 'export'\"></app-export>\n  <app-json-edit *ngIf=\"viewSelected === 'json-edit'\"></app-json-edit>\n\n</ng-container>","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackBarService {\n  constructor(private snackBar: MatSnackBar) {}\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n      panelClass: 'snackbar'\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>snackbar works!</p>\n\n<button> \n    SnackBarButton \n</button> ","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CsvServiceService } from '../csv-service.service';\nimport { JsonEditorComponent, JsonEditorOptions } from 'ang-jsoneditor';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-json-edit',\n  templateUrl: './json-edit.component.html',\n  styleUrls: ['./json-edit.component.scss'],\n})\nexport class JsonEditComponent implements OnInit, OnDestroy {\n  public editorOptions: JsonEditorOptions;\n  public data: any;\n\n  @ViewChild(JsonEditorComponent, { static: false })\n  editor: JsonEditorComponent;\n\n  selectedCsv: any;\n  private selectedCsvSub: Subscription;\n\n  editorData: object;\n\n  constructor(private csvService: CsvServiceService) {}\n\n  ngOnInit(): void {\n    this.selectedCsv = this.csvService.selectedCsv;\n    this.setUpEditor();\n    this.selectedCsvSub = this.csvService.selectedCsvChanged.subscribe(\n      (data) => {\n        this.selectedCsv = data;\n        this.setUpEditor();\n      }\n    );\n  }\n\n  setUpEditor() {\n    this.editorOptions = new JsonEditorOptions();\n    // this.editorOptions.modes = ['code', 'text', 'tree', 'view'];\n    this.editorOptions.mode = 'code';\n    this.editorData = this.selectedCsv.data;\n  }\n\n  onSave() {\n    this.selectedCsv.data = this.editorData;\n    this.csvService.updateCsv(this.selectedCsv);\n  }\n\n  ngOnDestroy() {\n    this.selectedCsvSub.unsubscribe();\n  }\n}\n","<div class=\"container margin-bottom-2\">\n  <div class=\"buttons\" >\n    <button class=\"button is-primary\" (click)=\"onSave()\">\n      <mat-icon aria-hidden=\"false\" slot=\"start\">save</mat-icon>\n      <span slot=\"end\"> Save JSON</span>\n    </button>\n  </div>\n\n  <json-editor style=\"min-height: 800px;\" [options]=\"editorOptions\" [(ngModel)]=\"editorData\" ></json-editor>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}